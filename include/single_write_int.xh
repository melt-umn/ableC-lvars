#ifndef _SINGLE_WRITE_INT_XH
#define _SINGLE_WRITE_INT_XH

#include "lvars.xh"
#include "wrapped_int.xh"

int leq_single_write_int(Int* i1, Int* i2) {
  match (i2) {
    I(n1) -> {
      match (i1) {
        I(n2) -> {return n1 == n2;}
        Unknown() -> {return 1;}
      }
    }
    Unknown() -> {
      match (i1) {
        Unknown() -> {return 1;}
        _ -> {return 0;}
      }
    }
  }
}

Value<Int*>* lub_single_write_int(Int* i1, Int* i2) {
  match (i1) {
    I(n1) -> {
      match (i2) {
        I(n2) -> {
          if (n1 == n2) {
            return value(I(n1));
          }
          return Top<Int*>;
        }
        Unknown() -> {return value(copyWrappedInt(i1));}
      }
    }
    Unknown() -> {return value(copyWrappedInt(i2));}
  }
}

Lattice<Int*>* make_lattice_single_write_int() {
  return make_lattice_wrapped_int(leq_single_write_int, 
                                  lub_single_write_int);
}

Lvar<Int*>* make_lvar_single_write_int() {
  Lattice<Int*>* lat = make_lattice_single_write_int();
  Lvar<Int*>* l = newLvar lat;
  return l;
}

#endif
