#include "lvars.xh"
#include "int.xh"

#ifndef _SUMINT_XH
#define _SUMINT_XH

// set up leq method

int leqSumInt(Int* i1, Int* i2) {
  match (i1) {
    I_Bot() -> {return 1;}
    I(n1) -> {
      match (i2) {
        I_Bot() -> {return 0;}
        I(n2) -> {return 1;} // since any int can be reached from any other
        I_Top() -> {return 1;} 
      }
    }
    I_Top() -> {
      match(i2) {
        I_Top() -> {return 1;}
        _ -> {return 0;}
      }
    }
  }
}

// set up lub method

Int* lubSumInt(Int* i1, Int* i2) {
  match (i1) {
    I_Top() -> {return i1;}
    I_Bot() -> {return i2;}
    I(n1) -> {
      match (i2) {
        I_Top() -> {return i2;}
        I_Bot() -> {return i1;}
        I(n2) -> {
          return I(n1 + n2);
        }
      }
    }
  }
}

Lattice<Int*>* sumIntLattice() {
  return lattice(I_Bot(), I_Top(), leqSumInt, lubSumInt, showInteger, freeInteger);
}

#endif
